"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var RequestFactory = /*#__PURE__*/function () {
  function RequestFactory() {
    _classCallCheck(this, RequestFactory);
  }
  _createClass(RequestFactory, [{
    key: "createRequest",
    value:
    /**
     * @param {string} url
     * @param {Object} options
     * @param {Function} [callback]
     * @returns {XMLHttpRequest}
     */
    function createRequest(url, options, callback) {
      var xhr = new XMLHttpRequest();
      xhr.onerror = function () {
        if (callback) {
          callback(new Error(xhr.statusText));
        }
      };
      xhr.onload = function () {
        if (callback) {
          callback();
        }
      };
      xhr.open(options.method, url, true);
      this.setOptions(xhr, options);
      return xhr;
    }

    /**
     * @private
     * @param {XMLHttpRequest} xhr
     * @param {Object} headers
     * @returns {void}
     */
  }, {
    key: "setHeaders",
    value: function setHeaders(xhr, headers) {
      var headerKeys = Object.keys(headers);
      headerKeys.forEach(function (key) {
        var value = headers[key];
        xhr.setRequestHeader(key, value);
      });
    }

    /**
     * @private
     * @param {XMLHttpRequest} xhr
     * @param {Object} options
     * @returns {void}
     */
  }, {
    key: "setOptions",
    value: function setOptions(xhr, options) {
      xhr.withCredentials = options.withCredentials;
      if (options.headers) {
        this.setHeaders(xhr, options.headers);
      }
    }
  }], [{
    key: "create",
    value:
    /**
     * @returns {RequestFactory}
     */
    function create() {
      return new RequestFactory();
    }
  }]);
  return RequestFactory;
}();
exports.default = RequestFactory;
//# sourceMappingURL=request-factory.js.map