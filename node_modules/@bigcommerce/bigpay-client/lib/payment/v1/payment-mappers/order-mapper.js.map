{"version":3,"file":"order-mapper.js","names":["_utils","require","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","OrderMapper","value","mapToOrder","data","_data$order","order","omitNil","billing_address","mapToBillingAddress","coupons","mapToCoupons","currency","id","orderId","toString","items","mapToItems","shipping","mapToShipping","shipping_address","mapToShippingAddress","token","totals","mapToOrderTotals","_data$customer","customer","address","mapToAddress","email","_ref","shippingOption","description","transitTime","omitEmptyStringAndNil","method","transit_time","_ref2","_ref2$order","coupon","map","_ref3","code","addressKey","city","company","country_code","countryCode","country","first_name","firstName","last_name","lastName","phone","state_code","provinceCode","state","province","street_1","addressLine1","street_2","addressLine2","zip","postCode","_data$cart","cart","itemData","variant_id","variantId","name","price","integerAmount","unit_price","integerUnitPrice","quantity","sku","_data$order2","grand_total","grandTotal","handling","subtotal","tax","taxTotal","create","exports","default"],"sources":["../../../../src/payment/v1/payment-mappers/order-mapper.js"],"sourcesContent":["import { omitEmptyStringAndNil, omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping: this.mapToShipping(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param  {PaymentRequestData} data\n     * @return {Shipping[]}\n     */\n    mapToShipping(data) {\n        const { description, transitTime } = data.shippingOption || {};\n\n        if (description) {\n            return [omitEmptyStringAndNil({\n                method: description,\n                transit_time: transitTime,\n            })];\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitEmptyStringAndNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map((itemData) => omitNil({\n            code: itemData.id,\n            variant_id: itemData.variantId,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAAiF,SAAAC,QAAAC,GAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,GAAA,kBAAAA,GAAA,gBAAAA,GAAA,WAAAA,GAAA,yBAAAC,MAAA,IAAAD,GAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,GAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,GAAA,KAAAD,OAAA,CAAAC,GAAA;AAAA,SAAAK,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAC,SAAA;AAAA,SAAAC,kBAAAC,MAAA,EAAAC,KAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAD,KAAA,CAAAE,MAAA,EAAAD,CAAA,UAAAE,UAAA,GAAAH,KAAA,CAAAC,CAAA,GAAAE,UAAA,CAAAC,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAAC,MAAA,CAAAC,cAAA,CAAAT,MAAA,EAAAU,cAAA,CAAAN,UAAA,CAAAO,GAAA,GAAAP,UAAA;AAAA,SAAAQ,aAAAf,WAAA,EAAAgB,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAd,iBAAA,CAAAF,WAAA,CAAAH,SAAA,EAAAmB,UAAA,OAAAC,WAAA,EAAAf,iBAAA,CAAAF,WAAA,EAAAiB,WAAA,GAAAN,MAAA,CAAAC,cAAA,CAAAZ,WAAA,iBAAAU,QAAA,mBAAAV,WAAA;AAAA,SAAAa,eAAAK,GAAA,QAAAJ,GAAA,GAAAK,YAAA,CAAAD,GAAA,oBAAA1B,OAAA,CAAAsB,GAAA,iBAAAA,GAAA,GAAAM,MAAA,CAAAN,GAAA;AAAA,SAAAK,aAAAE,KAAA,EAAAC,IAAA,QAAA9B,OAAA,CAAA6B,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAA3B,MAAA,CAAA8B,WAAA,OAAAD,IAAA,KAAAE,SAAA,QAAAC,GAAA,GAAAH,IAAA,CAAAI,IAAA,CAAAN,KAAA,EAAAC,IAAA,oBAAA9B,OAAA,CAAAkC,GAAA,uBAAAA,GAAA,YAAAzB,SAAA,4DAAAqB,IAAA,gBAAAF,MAAA,GAAAQ,MAAA,EAAAP,KAAA;AAAA,IAE5DQ,WAAW;EAAA,SAAAA,YAAA;IAAA/B,eAAA,OAAA+B,WAAA;EAAA;EAAAd,YAAA,CAAAc,WAAA;IAAAf,GAAA;IAAAgB,KAAA;IAQ5B;AACJ;AACA;AACA;IACI,SAAAC,WAAWC,IAAI,EAAE;MACb,IAAAC,WAAA,GAAuBD,IAAI,CAAnBE,KAAK;QAALA,KAAK,GAAAD,WAAA,cAAG,CAAC,CAAC,GAAAA,WAAA;MAElB,OAAO,IAAAE,cAAO,EAAC;QACXC,eAAe,EAAE,IAAI,CAACC,mBAAmB,CAACL,IAAI,CAAC;QAC/CM,OAAO,EAAE,IAAI,CAACC,YAAY,CAACP,IAAI,CAAC;QAChCQ,QAAQ,EAAEN,KAAK,CAACM,QAAQ;QACxBC,EAAE,EAAEP,KAAK,CAACQ,OAAO,GAAG,IAAAC,eAAQ,EAACT,KAAK,CAACQ,OAAO,CAAC,GAAG,IAAI;QAClDE,KAAK,EAAE,IAAI,CAACC,UAAU,CAACb,IAAI,CAAC;QAC5Bc,QAAQ,EAAE,IAAI,CAACC,aAAa,CAACf,IAAI,CAAC;QAClCgB,gBAAgB,EAAE,IAAI,CAACC,oBAAoB,CAACjB,IAAI,CAAC;QACjDkB,KAAK,EAAEhB,KAAK,CAACgB,KAAK;QAClBC,MAAM,EAAE,IAAI,CAACC,gBAAgB,CAACpB,IAAI;MACtC,CAAC,CAAC;IACN;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAlB,GAAA;IAAAgB,KAAA,EAKA,SAAAO,oBAAoBL,IAAI,EAAE;MACtB,IAAAqB,cAAA,GAA0BrB,IAAI,CAAtBsB,QAAQ;QAARA,QAAQ,GAAAD,cAAA,cAAG,CAAC,CAAC,GAAAA,cAAA;MACrB,IAAME,OAAO,GAAG,IAAI,CAACC,YAAY,CAACxB,IAAI,EAAE,gBAAgB,CAAC;MAEzD,IAAIsB,QAAQ,CAACG,KAAK,EAAE;QAChBF,OAAO,CAACE,KAAK,GAAGH,QAAQ,CAACG,KAAK;MAClC;MAEA,OAAOF,OAAO;IAClB;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAzC,GAAA;IAAAgB,KAAA,EAKA,SAAAiB,cAAcf,IAAI,EAAE;MAChB,IAAA0B,IAAA,GAAqC1B,IAAI,CAAC2B,cAAc,IAAI,CAAC,CAAC;QAAtDC,WAAW,GAAAF,IAAA,CAAXE,WAAW;QAAEC,WAAW,GAAAH,IAAA,CAAXG,WAAW;MAEhC,IAAID,WAAW,EAAE;QACb,OAAO,CAAC,IAAAE,4BAAqB,EAAC;UAC1BC,MAAM,EAAEH,WAAW;UACnBI,YAAY,EAAEH;QAClB,CAAC,CAAC,CAAC;MACP;MAEA,OAAO,EAAE;IACb;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA/C,GAAA;IAAAgB,KAAA,EAKA,SAAAS,aAAA0B,KAAA,EAA6B;MAAA,IAAAC,WAAA,GAAAD,KAAA,CAAd/B,KAAK;QAALA,KAAK,GAAAgC,WAAA,cAAG,CAAC,CAAC,GAAAA,WAAA;MACrB,IAAIhC,KAAK,CAACiC,MAAM,IAAIjC,KAAK,CAACiC,MAAM,CAAC7B,OAAO,EAAE;QACtC,OAAOJ,KAAK,CAACiC,MAAM,CAAC7B,OAAO,CAAC8B,GAAG,CAAC,UAAAC,KAAA;UAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;UAAA,OAAQ;YAAEA,IAAI,EAAJA;UAAK,CAAC;QAAA,CAAC,CAAC;MAC7D;MAEA,OAAO,EAAE;IACb;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAxD,GAAA;IAAAgB,KAAA,EAKA,SAAAmB,qBAAqBjB,IAAI,EAAE;MACvB,OAAO,IAAI,CAACwB,YAAY,CAACxB,IAAI,EAAE,iBAAiB,CAAC;IACrD;;IAEA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAAlB,GAAA;IAAAgB,KAAA,EAMA,SAAA0B,aAAaxB,IAAI,EAAEuC,UAAU,EAAE;MAC3B,IAAMhB,OAAO,GAAGvB,IAAI,CAACuC,UAAU,CAAC,IAAI,CAAC,CAAC;MAEtC,OAAO,IAAAT,4BAAqB,EAAC;QACzBU,IAAI,EAAEjB,OAAO,CAACiB,IAAI;QAClBC,OAAO,EAAElB,OAAO,CAACkB,OAAO;QACxBC,YAAY,EAAEnB,OAAO,CAACoB,WAAW;QACjCC,OAAO,EAAErB,OAAO,CAACqB,OAAO;QACxBC,UAAU,EAAEtB,OAAO,CAACuB,SAAS;QAC7BC,SAAS,EAAExB,OAAO,CAACyB,QAAQ;QAC3BC,KAAK,EAAE1B,OAAO,CAAC0B,KAAK;QACpBC,UAAU,EAAE3B,OAAO,CAAC4B,YAAY;QAChCC,KAAK,EAAE7B,OAAO,CAAC8B,QAAQ;QACvBC,QAAQ,EAAE/B,OAAO,CAACgC,YAAY;QAC9BC,QAAQ,EAAEjC,OAAO,CAACkC,YAAY;QAC9BC,GAAG,EAAEnC,OAAO,CAACoC;MACjB,CAAC,CAAC;IACN;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAA7E,GAAA;IAAAgB,KAAA,EAKA,SAAAe,WAAWb,IAAI,EAAE;MACb,IAAA4D,UAAA,GAAiC5D,IAAI,CAA7B6D,IAAI;QAAJA,IAAI,GAAAD,UAAA,cAAG;UAAEhD,KAAK,EAAE;QAAG,CAAC,GAAAgD,UAAA;MAE5B,OAAOC,IAAI,CAACjD,KAAK,CAACwB,GAAG,CAAC,UAAC0B,QAAQ;QAAA,OAAK,IAAA3D,cAAO,EAAC;UACxCmC,IAAI,EAAEwB,QAAQ,CAACrD,EAAE;UACjBsD,UAAU,EAAED,QAAQ,CAACE,SAAS;UAC9BC,IAAI,EAAEH,QAAQ,CAACG,IAAI;UACnBC,KAAK,EAAEJ,QAAQ,CAACK,aAAa;UAC7BC,UAAU,EAAEN,QAAQ,CAACO,gBAAgB;UACrCC,QAAQ,EAAER,QAAQ,CAACQ,QAAQ;UAC3BC,GAAG,EAAET,QAAQ,CAACS;QAClB,CAAC,CAAC;MAAA,EAAC;IACP;;IAEA;AACJ;AACA;AACA;AACA;EAJI;IAAAzF,GAAA;IAAAgB,KAAA,EAKA,SAAAsB,iBAAiBpB,IAAI,EAAE;MACnB,IAAAwE,YAAA,GAAuBxE,IAAI,CAAnBE,KAAK;QAALA,KAAK,GAAAsE,YAAA,cAAG,CAAC,CAAC,GAAAA,YAAA;MAElB,OAAO,IAAArE,cAAO,EAAC;QACXsE,WAAW,EAAEvE,KAAK,CAACwE,UAAU,GAAGxE,KAAK,CAACwE,UAAU,CAACP,aAAa,GAAG,IAAI;QACrEQ,QAAQ,EAAEzE,KAAK,CAACyE,QAAQ,GAAGzE,KAAK,CAACyE,QAAQ,CAACR,aAAa,GAAG,IAAI;QAC9DrD,QAAQ,EAAEZ,KAAK,CAACY,QAAQ,GAAGZ,KAAK,CAACY,QAAQ,CAACqD,aAAa,GAAG,IAAI;QAC9DS,QAAQ,EAAE1E,KAAK,CAAC0E,QAAQ,GAAG1E,KAAK,CAAC0E,QAAQ,CAACT,aAAa,GAAG,IAAI;QAC9DU,GAAG,EAAE3E,KAAK,CAAC4E,QAAQ,GAAG5E,KAAK,CAAC4E,QAAQ,CAACX,aAAa,GAAG;MACzD,CAAC,CAAC;IACN;EAAC;IAAArF,GAAA;IAAAgB,KAAA;IA9ID;AACJ;AACA;IACI,SAAAiF,OAAA,EAAgB;MACZ,OAAO,IAAIlF,WAAW,EAAE;IAC5B;EAAC;EAAA,OAAAA,WAAA;AAAA;AAAAmF,OAAA,CAAAC,OAAA,GAAApF,WAAA"}