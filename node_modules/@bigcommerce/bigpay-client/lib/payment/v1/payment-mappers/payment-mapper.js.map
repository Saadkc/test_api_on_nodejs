{"version":3,"file":"payment-mapper.js","names":["_objectAssign","_interopRequireDefault","require","_utils","_paymentMethodIdMapper","obj","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","PaymentMapper","paymentMethodIdMapper","value","mapToPayment","data","_data$order","order","_data$orderMeta","orderMeta","_data$payment","payment","_data$paymentMethod","paymentMethod","payload","device_info","deviceSessionId","device","deviceFingerprint","fingerprint_id","gateway","mapToId","notify_url","callbackUrl","return_url","returnUrl","vault_payment_instrument","instrumentId","shouldSaveInstrument","set_as_default_stored_instrument","shouldSetAsDefaultInstrument","method","objectAssign","nonce","formattedPayload","bigpay_token","mapToBigPayToken","credit_card_token","token","cryptogramId","credit_card_cryptogram","mapToCryptogram","credit_card","mapToCreditCard","browser_info","omitNil","_data$payment2","account_name","ccName","month","ccExpiry","toNumber","number","ccNumber","verification_value","ccCvv","year","customer_code","ccCustomerCode","three_d_secure","threeDSecure","hosted_form_nonce","hostedFormNonce","_ref","credit_card_number_confirmation","verification_nonce","_ref2","payment_cryptogram","eci","xid","transactionId","account_mask","accountMask","create","PaymentMethodIdMapper","exports"],"sources":["../../../../src/payment/v1/payment-mappers/payment-mapper.js"],"sourcesContent":["import objectAssign from 'object-assign';\nimport { omitNil, toNumber } from '../../../common/utils';\n\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\n\nexport default class PaymentMapper {\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {PaymentMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new PaymentMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayment(data) {\n        const {\n            order = {},\n            orderMeta = {},\n            payment = {},\n            paymentMethod = {},\n        } = data;\n\n        const payload = {\n            device_info: payment.deviceSessionId ? payment.deviceSessionId : null,\n            device: orderMeta.deviceFingerprint ? { fingerprint_id: orderMeta.deviceFingerprint } : null,\n            gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n            notify_url: order.callbackUrl,\n            return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,\n            set_as_default_stored_instrument: (payment.instrumentId || payment.shouldSaveInstrument) ? payment.shouldSetAsDefaultInstrument : null,\n        };\n\n        const { method } = paymentMethod;\n\n        if (method) {\n            objectAssign(payload, { method });\n        }\n\n        const nonce = payment.nonce || paymentMethod.nonce;\n\n        if (payment.formattedPayload) {\n            objectAssign(payload, payment.formattedPayload);\n        } else if (payment.instrumentId) {\n            objectAssign(payload, {\n                bigpay_token: this.mapToBigPayToken(data),\n            });\n        } else if (nonce) {\n            objectAssign(payload, {\n                credit_card_token: {\n                    token: nonce,\n                },\n            });\n        } else if (payment.cryptogramId) {\n            objectAssign(payload, {\n                credit_card_cryptogram: this.mapToCryptogram(data),\n            });\n        } else {\n            objectAssign(payload, {\n                credit_card: this.mapToCreditCard(data),\n            });\n        }\n\n        if (payment.browser_info) {\n            objectAssign(payload, {\n                browser_info: payment.browser_info,\n            });\n        }\n\n        return omitNil(payload);\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCreditCard(data) {\n        const { payment = {} } = data;\n\n        return omitNil({\n            account_name: payment.ccName,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            verification_value: payment.ccCvv,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            customer_code: payment.ccCustomerCode,\n            three_d_secure: payment.threeDSecure,\n            hosted_form_nonce: payment.hostedFormNonce,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToBigPayToken({ payment }) {\n        return omitNil({\n            credit_card_number_confirmation: payment.ccNumber,\n            token: payment.instrumentId,\n            verification_value: payment.ccCvv,\n            verification_nonce: payment.nonce,\n            three_d_secure: payment.threeDSecure,\n            hosted_form_nonce: payment.hostedFormNonce,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToCryptogram({ payment }) {\n        return omitNil({\n            payment_cryptogram: payment.cryptogramId,\n            eci: payment.eci,\n            xid: payment.transactionId,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            account_mask: payment.accountMask,\n        });\n    }\n}\n"],"mappings":"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"}