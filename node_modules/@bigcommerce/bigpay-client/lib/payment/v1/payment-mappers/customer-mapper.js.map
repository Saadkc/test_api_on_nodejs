{"version":3,"file":"customer-mapper.js","names":["_utils","require","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","CustomerMapper","value","mapToCustomer","data","_data$customer","customer","_data$quoteMeta","quoteMeta","omitNil","customer_group","customerGroupName","name","geo_ip_country_code","request","geoCountryCode","id","customerId","toString","session_token","sessionHash","create","exports","default"],"sources":["../../../../src/payment/v1/payment-mappers/customer-mapper.js"],"sourcesContent":["import { omitNil, toString } from '../../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {} } = data;\n\n        return omitNil({\n            customer_group: customer.customerGroupName ? { name: customer.customerGroupName } : null,\n            geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            id: customer.customerId ? toString(customer.customerId) : null,\n            session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n        });\n    }\n}\n"],"mappings":"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"}