{"version":3,"file":"address-mapper.js","names":["_utils","require","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","AddressMapper","mapToBillingAddress","data","mapToAddress","mapToShippingAddress","addressKey","_omitNil","address","formattedAddressKey","toSnakeCase","omitNil","concat","city","company","countryCode","country","firstName","lastName","phone","provinceCode","province","addressLine1","addressLine2","postCode","create","exports","default"],"sources":["../../../src/payment/offsite-payment-mappers/address-mapper.js"],"sourcesContent":["import { omitNil, toSnakeCase } from '../../common/utils';\n\nexport default class AddressMapper {\n    /**\n     * @returns {AddressMapper}\n     */\n    static create() {\n        return new AddressMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        return this.mapToAddress(data, 'billingAddress');\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n        const formattedAddressKey = toSnakeCase(addressKey);\n\n        return omitNil({\n            [`${formattedAddressKey}_city`]: address.city,\n            [`${formattedAddressKey}_company`]: address.company,\n            [`${formattedAddressKey}_country_code`]: address.countryCode,\n            [`${formattedAddressKey}_country`]: address.country,\n            [`${formattedAddressKey}_first_name`]: address.firstName,\n            [`${formattedAddressKey}_last_name`]: address.lastName,\n            [`${formattedAddressKey}_phone`]: address.phone,\n            [`${formattedAddressKey}_state_code`]: address.provinceCode,\n            [`${formattedAddressKey}_state`]: address.province,\n            [`${formattedAddressKey}_street_1`]: address.addressLine1,\n            [`${formattedAddressKey}_street_2`]: address.addressLine2,\n            [`${formattedAddressKey}_zip`]: address.postCode,\n        });\n    }\n}\n"],"mappings":"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"}